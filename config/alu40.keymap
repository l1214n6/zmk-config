/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define U_MOUSE_MOVE_MAX 1536
#define U_MOUSE_MOVE_EXPONENT 2
#define U_MOUSE_MOVE_DELAY 0

#define U_MOUSE_SCROLL_MAX 15
#define U_MOUSE_SCROLL_EXPONENT 0
#define U_MOUSE_SCROLL_DELAY 0

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mmv {
    time-to-max-speed-ms=<140>;
};
&mmv {
    acceleration-exponent=<2>;
};
&mwh {
    time-to-max-speed-ms=<1>;
};
&mwh {
    acceleration-exponent=<2>;
};


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC/~ |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
            // | TAB   |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |  '    |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |RET/SFT|
            // | PLAY  | LCTL | LALT | LGUI | LOWR |     SPACE    |  RAIS | LARW | UARW | DARW  |  RARW |

            bindings = <
&kp TAB    &kp Q         &kp W             &kp E     &kp R           &kp T      &kp Y      &kp U             &kp I      &kp O      &kp P             &kp BSPC
&mo 3      &kp A         &kp S             &kp D     &kp F           &kp G      &kp H      &kp J             &kp K      &kp L      &kp SEMI          &kp SQT
&kp GRAVE  &kp BACKSLASH &kp Z             &kp X     &kp C           &kp V      &kp B      &kp N             &kp M      &kp COMMA  &kp PERIOD        &kp SLASH
&none      &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LGUI  &kp LEFT_SHIFT  &mo 1      &kp SPACE  &kp LEFT_BRACKET  &kp EQUAL  &kp MINUS  &kp RIGHT_BRACKET &none
            >;
        };

        lower {
            bindings = <
&kp CAPS         &kp N1         &kp N2      &kp N3          &kp N4            &kp N5           &kp N6           &kp N7                 &kp N8               &kp N9               &kp N0                 &kp BACKSPACE
&kp ESCAPE       &kp AT_SIGN    &kp DOLLAR  &kp LEFT_ALT    &kp LEFT_CONTROL  &kp PRINTSCREEN  &kp LEFT_ARROW   &kp DOWN_ARROW         &kp UP_ARROW         &kp RIGHT_ARROW      &kp HASH               &kp CARET
&kp EXCLAMATION  &kp AMPERSAND  &kp K_UNDO  &kp K_CUT       &kp K_COPY        &kp K_PASTE      &kp INSERT       &kp SCROLLLOCK         &kp PAUSE_BREAK      &kp COMMA            &kp DOT                &kp EXCLAMATION
&none            &none          &none       &none           &kp LEFT_COMMAND  &none            &lt 2 RET        &kp LEFT_PARENTHESIS   &kp ASTERISK         &kp PERCENT          &kp RIGHT_PARENTHESIS  &none
            >;
        };

        layer_2 {
            bindings = <
&bt BT_SEL 0    &kp F1      &kp F2      &kp F3                &kp F4   &kp F5    &kp F6     &kp F7          &kp F8             &kp F9         &kp F10     &bt BT_NXT
&out OUT_TOG    &kp F11     &kp F12     &kp F13               &kp F14  &kp F15   &kp HOME   &kp PAGE_DOWN   &kp PAGE_UP        &kp END        &kp DELETE  &bt BT_CLR
&none           &none       &none       &kp C_BRIGHTNESS_DEC  &kp C_BRI_INC      &none      &kp C_MUTE      &kp C_VOLUME_DOWN  &kp C_VOL_UP   &none       &none
&none           &none       &none       &none                 &none              &none      &none           &none              &none          &none       &none
            >;
        };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none  &none            &none           &none           &none         &none       &kp K_PASTE  &kp DELETE
&none  &none  &none  &none  &none  &none            &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT   &none        &none
&none  &none  &none  &none  &none  &none            &none           &none           &none         &none       &none        &none
&none  &mo 5  &mo 5  &mo 4  &mo 6  &none            &mkp LCLK       &mkp RCLK       &mkp 3        &none       &none        &none
            >;
        };

        layer_4 {
            bindings = <
&none  &kp LC(LG(Q))  &none  &none  &none          &none        &none              &none              &none         &none            &none  &none
&none  &none          &none  &none  &kp LC(LG(F))  &none        &mmv MOVE_LEFT     &mmv MOVE_DOWN     &mmv MOVE_UP  &mmv MOVE_RIGHT  &none  &none
&none  &none          &none  &none  &none          &none        &none              &none              &none         &none            &none  &none
&none  &none          &none  &none  &none          &none        &mkp LCLK          &mkp RCLK          &mkp 3        &none            &none  &none
            >;
        };

        layer_5 {
            bindings = <
&none  &none  &none  &none  &none  &none        &none               &none              &none             &none             &none  &none
&none  &none  &none  &none  &none  &none        &mwh SCROLL_RIGHT   &mwh SCROLL_UP     &mwh SCROLL_DOWN  &mwh SCROLL_LEFT  &none  &none
&none  &none  &none  &none  &none  &none        &none               &none              &none             &none             &none  &none
&none  &none  &none  &none  &none  &none        &mkp LCLK           &mkp RCLK          &mkp 3            &none             &none  &none
            >;
        };

        layer_6 {
            bindings = <
&none  &none  &none  &none  &none  &none        &kp LG(LA(Y))      &kp LG(LA(U))             &kp LG(LA(I))      &kp LG(LA(O))        &none             &none
&none  &none  &none  &none  &none  &none        &kp LG(LA(H))      &kp LG(LA(J))             &kp LG(LA(K))      &kp LG(LA(L))        &kp LG(LA(SEMI))  &none
&none  &none  &none  &none  &none  &none        &kp LG(LA(B))      &kp LG(LA(N))             &kp LG(LA(M))      &kp LG(LA(COMMA))    &none             &none
&none  &none  &none  &none  &none  &none        &kp LG(LA(SPACE))  &kp LG(LA(LEFT_BRACKET))  &kp LG(LA(EQUAL))  &kp LG(LA(MINUS))    &none             &none
            >;
        };
    };
};
